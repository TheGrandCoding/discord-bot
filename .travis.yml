language: csharp
solution: DiscordBot/DiscordBot.sln
mono: none
dotnet: 3.1
dist: xenial
env:
  global:
  - DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  - DOTNET_CLI_TELEMETRY_OPTOUT: 1
branches:
  only:
    - master
    - dev

jobs:
  allow_failures:
    - name: Windows
  include:
    - name: ReleaseM
      if: branch = master
      script: 
        - dotnet restore DiscordBot/DiscordBot.sln
        - dotnet publish -c LinRelease -f netcoreapp3.1 -r linux-arm DiscordBot/DiscordBot.sln
        - 'if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then bash deploy.sh; fi'
      after_failure:
        - wget https://raw.githubusercontent.com/DiscordHooks/travis-ci-discord-webhook/master/send.sh
        - chmod +x send.sh
        - ./send.sh failure $WEBHOOK_URL
    - name: ReleaseN
      if: branch != master
      script: 
        - dotnet restore DiscordBot/DiscordBot.sln
        - dotnet publish -c LinRelease -f netcoreapp3.1 -r linux-arm DiscordBot/DiscordBot.sln
      after_success:
        - wget https://raw.githubusercontent.com/DiscordHooks/travis-ci-discord-webhook/master/send.sh
        - chmod +x send.sh
        - ./send.sh success $WEBHOOK_URL
      after_failure:
        - wget https://raw.githubusercontent.com/DiscordHooks/travis-ci-discord-webhook/master/send.sh
        - chmod +x send.sh
        - ./send.sh failure $WEBHOOK_URL
    - name: Windows
      script: 
        - dotnet restore DiscordBot/DiscordBot.sln
        - dotnet build -c WinDebug -f netcoreapp3.1 DiscordBot/DiscordBot.sln